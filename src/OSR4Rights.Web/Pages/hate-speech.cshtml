@page
@model OSR4Rights.Web.Pages.HateSpeechModel
@{
    ViewData["Title"] = "Hate Speech";
}

<h1>Hate Speech</h1>

<p>Please upload a CSV file (comma-separated values format which spreadsheet tools such as Microsoft Excel generate) containing the text to be analysed, one sample per row. The CSV file can have any number of rows and any number of columns, as long as at least one of the columns has a header named Text (case-insensitive). </p>

<p><a href="https://datatracker.ietf.org/doc/html/rfc4180">RFC 4180</a> is the accepted standard, however a lot of systems generate bad CSV data that is impossible to parse. We recommend the following style:</p>

<h4>1 column</h4>
Text<br />
"Here is line 1 and all surrounded by double quotes"<br />
"Here is line 2, with a comma"<br />
"Here is line 3 with an apostrophy coppied from Word’s text editor which is different from ' this one"<br />
<br />

<h4>Multi column</h4>
Identity,Text,comment<br />
1,"Here is line 1 and all surrounded by double quotes. Notice the first column isn't surrounded - it works, however we suggest for safety you do'"<br />
"2","Here is line 2, with a comma, and the identity is surrounded for safety too"<br />
"3","Here is line 3 with an apostrophy coppied from Word’s text editor which is different from ' this one"<br />
<br />

@*<p>Any text containing commas within needs to be enclosed in double quotes (e.g., "Brexit, Covid-19 and climate change are only a few of the issues that need to be discussed"). If you are using a spreadsheet tool to create the CSV file, double quotes are automatically added so you do not need to add them yourself. However, if you are using a text editor to create your CSV file, please make sure that any text containing commas is enclosed in double quotes.</p>*@
<p>If you are using a spreadsheet tool to create the CSV file, double quotes are automatically added so you do not need to add them yourself. However, if you are using a text editor to create your CSV file, please make sure that any text containing commas is enclosed in double quotes.</p>

<p>We define "hate speech" as text that contains hateful, offensive and toxic language. The tool will produce a score (between 0 and 100) indicative of the extent of hate speech contained in the input text. The languages currently supported by this tool are English, Arabic and Russian, although the language does not need to be specified together with the input text. </p>

@if (Model.IsAllowedToUpload)
{
    <!-- keep for now as js code still references-->
    <input type="text" id="endpoint" name="endpoint" value="/files/" hidden="true">
    <input type="number" id="paralleluploads" name="paralleluploads" value="1" hidden="true">
    <input type="number" id="chunksize" name="chunksize" hidden="true">

    <br />
    <!-- https://stackoverflow.com/questions/11235206/twitter-bootstrap-form-file-element-upload-button-->
    <!-- file button -->
    <label class="btn btn-default">
        <input type="file">
    </label>

    <br />
    <br />
    <div class="progress" style="height: 32px;">
        <div class="progress-bar progress-bar-striped" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"><span id="foo"></span></div>
    </div>

    <br />
    <!-- pause / resume button-->
    <button class="btn btn-sm btn-outline-info" id="toggle-btn" hidden="true"></button>

    <br />
}
else
{
    <p class="text-danger">We need to manually approve you before you can upload your own files. Please try the samples below</p>
}

<br />

<h1>Samples</h1>

<p>Please feel free to try any of the following samples. IMPORTANT NOTE: For the purposes of demonstrating the detection capabilities of the tool, the test files below contain language (drawn from real-world examples) that some users might find highly offensive.</p>

<p>
    1. <a href="/sample-data/hatespeech/x1TE1.csv">x1TE1.csv</a> A very small set of English tweets
</p>
<p>
    <form method="post" asp-page-handler="runTE1">
        <input type="submit" value="Run x1TE1.csv" />
    </form>
</p>


<p>2. <a href="/sample-data/hatespeech/x2TESTfile.csv">x2TESTfile.csv</a> Almost 300 English text samples</p>

<p>
    <form method="post" asp-page-handler="runTESTfile">
        <input type="submit" value="Run x2TESTfile.csv" />
    </form>
</p>


<p>3. <a href="/sample-data/hatespeech/x3multilingual-test.csv">x3multilingual-test.csv</a> A small set containing English, Arabic and Russian text </p>

<p>
    <form method="post" asp-page-handler="runmultilingualtest">
        <input type="submit" value="Run x3multilingual-test.csv" />
    </form>
</p>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script src="~/js/tus-js-client/dist/tus.js" asp-append-version="true"></script>
    <script src="~/js/upload-tus.js" asp-append-version="true"></script>
}


